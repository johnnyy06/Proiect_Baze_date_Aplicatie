#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CargoFlow
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TransportManagement")]
	public partial class TransportManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFuelConsumption(FuelConsumption instance);
    partial void UpdateFuelConsumption(FuelConsumption instance);
    partial void DeleteFuelConsumption(FuelConsumption instance);
    partial void InsertGPSMonitoring(GPSMonitoring instance);
    partial void UpdateGPSMonitoring(GPSMonitoring instance);
    partial void DeleteGPSMonitoring(GPSMonitoring instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertRouteAssignment(RouteAssignment instance);
    partial void UpdateRouteAssignment(RouteAssignment instance);
    partial void DeleteRouteAssignment(RouteAssignment instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    #endregion
		
		public TransportManagementDataContext() : 
				base(global::CargoFlow.Properties.Settings.Default.TransportManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TransportManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransportManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransportManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransportManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FuelConsumption> FuelConsumptions
		{
			get
			{
				return this.GetTable<FuelConsumption>();
			}
		}
		
		public System.Data.Linq.Table<GPSMonitoring> GPSMonitorings
		{
			get
			{
				return this.GetTable<GPSMonitoring>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<RouteAssignment> RouteAssignments
		{
			get
			{
				return this.GetTable<RouteAssignment>();
			}
		}
		
		public System.Data.Linq.Table<Route> Routes
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FuelConsumption")]
	public partial class FuelConsumption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConsumptionID;
		
		private int _VehicleID;
		
		private int _RouteID;
		
		private decimal _FuelUsed;
		
		private System.DateTime _ConsumptionDate;
		
		private EntityRef<Route> _Route;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsumptionIDChanging(int value);
    partial void OnConsumptionIDChanged();
    partial void OnVehicleIDChanging(int value);
    partial void OnVehicleIDChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnFuelUsedChanging(decimal value);
    partial void OnFuelUsedChanged();
    partial void OnConsumptionDateChanging(System.DateTime value);
    partial void OnConsumptionDateChanged();
    #endregion
		
		public FuelConsumption()
		{
			this._Route = default(EntityRef<Route>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConsumptionID
		{
			get
			{
				return this._ConsumptionID;
			}
			set
			{
				if ((this._ConsumptionID != value))
				{
					this.OnConsumptionIDChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionID = value;
					this.SendPropertyChanged("ConsumptionID");
					this.OnConsumptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="Int NOT NULL")]
		public int VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelUsed", DbType="Decimal(10,2) NOT NULL")]
		public decimal FuelUsed
		{
			get
			{
				return this._FuelUsed;
			}
			set
			{
				if ((this._FuelUsed != value))
				{
					this.OnFuelUsedChanging(value);
					this.SendPropertyChanging();
					this._FuelUsed = value;
					this.SendPropertyChanged("FuelUsed");
					this.OnFuelUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionDate", DbType="Date NOT NULL")]
		public System.DateTime ConsumptionDate
		{
			get
			{
				return this._ConsumptionDate;
			}
			set
			{
				if ((this._ConsumptionDate != value))
				{
					this.OnConsumptionDateChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionDate = value;
					this.SendPropertyChanged("ConsumptionDate");
					this.OnConsumptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_FuelConsumption", Storage="_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.FuelConsumptions.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.FuelConsumptions.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_FuelConsumption", Storage="_Vehicle", ThisKey="VehicleID", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.FuelConsumptions.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.FuelConsumptions.Add(this);
						this._VehicleID = value.VehicleID;
					}
					else
					{
						this._VehicleID = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GPSMonitoring")]
	public partial class GPSMonitoring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GPSID;
		
		private int _VehicleID;
		
		private System.DateTime _Timestamp;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private System.Nullable<decimal> _Speed;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGPSIDChanging(int value);
    partial void OnGPSIDChanged();
    partial void OnVehicleIDChanging(int value);
    partial void OnVehicleIDChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnSpeedChanging(System.Nullable<decimal> value);
    partial void OnSpeedChanged();
    #endregion
		
		public GPSMonitoring()
		{
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GPSID
		{
			get
			{
				return this._GPSID;
			}
			set
			{
				if ((this._GPSID != value))
				{
					this.OnGPSIDChanging(value);
					this.SendPropertyChanging();
					this._GPSID = value;
					this.SendPropertyChanged("GPSID");
					this.OnGPSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="Int NOT NULL")]
		public int VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_GPSMonitoring", Storage="_Vehicle", ThisKey="VehicleID", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.GPSMonitorings.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.GPSMonitorings.Add(this);
						this._VehicleID = value.VehicleID;
					}
					else
					{
						this._VehicleID = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private string _ReportType;
		
		private int _GeneratedBy;
		
		private System.DateTime _GeneratedAt;
		
		private string _Content;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnReportTypeChanging(string value);
    partial void OnReportTypeChanged();
    partial void OnGeneratedByChanging(int value);
    partial void OnGeneratedByChanged();
    partial void OnGeneratedAtChanging(System.DateTime value);
    partial void OnGeneratedAtChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public Report()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ReportType
		{
			get
			{
				return this._ReportType;
			}
			set
			{
				if ((this._ReportType != value))
				{
					this.OnReportTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportType = value;
					this.SendPropertyChanged("ReportType");
					this.OnReportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedBy", DbType="Int NOT NULL")]
		public int GeneratedBy
		{
			get
			{
				return this._GeneratedBy;
			}
			set
			{
				if ((this._GeneratedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneratedByChanging(value);
					this.SendPropertyChanging();
					this._GeneratedBy = value;
					this.SendPropertyChanged("GeneratedBy");
					this.OnGeneratedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedAt", DbType="DateTime NOT NULL")]
		public System.DateTime GeneratedAt
		{
			get
			{
				return this._GeneratedAt;
			}
			set
			{
				if ((this._GeneratedAt != value))
				{
					this.OnGeneratedAtChanging(value);
					this.SendPropertyChanging();
					this._GeneratedAt = value;
					this.SendPropertyChanged("GeneratedAt");
					this.OnGeneratedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_User", ThisKey="GeneratedBy", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._GeneratedBy = value.UserID;
					}
					else
					{
						this._GeneratedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RouteAssignments")]
	public partial class RouteAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssignmentID;
		
		private int _RouteID;
		
		private int _VehicleID;
		
		private int _DriverID;
		
		private System.DateTime _AssignmentDate;
		
		private System.Nullable<System.DateTime> _EstimatedStartTime;
		
		private System.Nullable<System.DateTime> _EstimatedEndTime;
		
		private EntityRef<Route> _Route;
		
		private EntityRef<User> _User;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssignmentIDChanging(int value);
    partial void OnAssignmentIDChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnVehicleIDChanging(int value);
    partial void OnVehicleIDChanged();
    partial void OnDriverIDChanging(int value);
    partial void OnDriverIDChanged();
    partial void OnAssignmentDateChanging(System.DateTime value);
    partial void OnAssignmentDateChanged();
    partial void OnEstimatedStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedStartTimeChanged();
    partial void OnEstimatedEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedEndTimeChanged();
    #endregion
		
		public RouteAssignment()
		{
			this._Route = default(EntityRef<Route>);
			this._User = default(EntityRef<User>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssignmentID
		{
			get
			{
				return this._AssignmentID;
			}
			set
			{
				if ((this._AssignmentID != value))
				{
					this.OnAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentID = value;
					this.SendPropertyChanged("AssignmentID");
					this.OnAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="Int NOT NULL")]
		public int VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int NOT NULL")]
		public int DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="Date NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this.OnAssignmentDateChanging(value);
					this.SendPropertyChanging();
					this._AssignmentDate = value;
					this.SendPropertyChanged("AssignmentDate");
					this.OnAssignmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedStartTime
		{
			get
			{
				return this._EstimatedStartTime;
			}
			set
			{
				if ((this._EstimatedStartTime != value))
				{
					this.OnEstimatedStartTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimatedStartTime = value;
					this.SendPropertyChanged("EstimatedStartTime");
					this.OnEstimatedStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedEndTime
		{
			get
			{
				return this._EstimatedEndTime;
			}
			set
			{
				if ((this._EstimatedEndTime != value))
				{
					this.OnEstimatedEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimatedEndTime = value;
					this.SendPropertyChanged("EstimatedEndTime");
					this.OnEstimatedEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RouteAssignment", Storage="_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.RouteAssignments.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.RouteAssignments.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RouteAssignment", Storage="_User", ThisKey="DriverID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RouteAssignments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RouteAssignments.Add(this);
						this._DriverID = value.UserID;
					}
					else
					{
						this._DriverID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_RouteAssignment", Storage="_Vehicle", ThisKey="VehicleID", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.RouteAssignments.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.RouteAssignments.Add(this);
						this._VehicleID = value.VehicleID;
					}
					else
					{
						this._VehicleID = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Routes")]
	public partial class Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RouteID;
		
		private string _RouteName;
		
		private string _StartLocation;
		
		private string _EndLocation;
		
		private decimal _Distance;
		
		private EntitySet<FuelConsumption> _FuelConsumptions;
		
		private EntitySet<RouteAssignment> _RouteAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnStartLocationChanging(string value);
    partial void OnStartLocationChanged();
    partial void OnEndLocationChanging(string value);
    partial void OnEndLocationChanged();
    partial void OnDistanceChanging(decimal value);
    partial void OnDistanceChanged();
    #endregion
		
		public Route()
		{
			this._FuelConsumptions = new EntitySet<FuelConsumption>(new Action<FuelConsumption>(this.attach_FuelConsumptions), new Action<FuelConsumption>(this.detach_FuelConsumptions));
			this._RouteAssignments = new EntitySet<RouteAssignment>(new Action<RouteAssignment>(this.attach_RouteAssignments), new Action<RouteAssignment>(this.detach_RouteAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RouteName
		{
			get
			{
				return this._RouteName;
			}
			set
			{
				if ((this._RouteName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._RouteName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocation", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StartLocation
		{
			get
			{
				return this._StartLocation;
			}
			set
			{
				if ((this._StartLocation != value))
				{
					this.OnStartLocationChanging(value);
					this.SendPropertyChanging();
					this._StartLocation = value;
					this.SendPropertyChanged("StartLocation");
					this.OnStartLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndLocation", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EndLocation
		{
			get
			{
				return this._EndLocation;
			}
			set
			{
				if ((this._EndLocation != value))
				{
					this.OnEndLocationChanging(value);
					this.SendPropertyChanging();
					this._EndLocation = value;
					this.SendPropertyChanged("EndLocation");
					this.OnEndLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Decimal(10,2) NOT NULL")]
		public decimal Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_FuelConsumption", Storage="_FuelConsumptions", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<FuelConsumption> FuelConsumptions
		{
			get
			{
				return this._FuelConsumptions;
			}
			set
			{
				this._FuelConsumptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RouteAssignment", Storage="_RouteAssignments", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<RouteAssignment> RouteAssignments
		{
			get
			{
				return this._RouteAssignments;
			}
			set
			{
				this._RouteAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelConsumptions(FuelConsumption entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_FuelConsumptions(FuelConsumption entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
		
		private void attach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _PasswordHash;
		
		private string _Role;
		
		private string _FullName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private EntitySet<Report> _Reports;
		
		private EntitySet<RouteAssignment> _RouteAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public User()
		{
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._RouteAssignments = new EntitySet<RouteAssignment>(new Action<RouteAssignment>(this.attach_RouteAssignments), new Action<RouteAssignment>(this.detach_RouteAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_Reports", ThisKey="UserID", OtherKey="GeneratedBy")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RouteAssignment", Storage="_RouteAssignments", ThisKey="UserID", OtherKey="DriverID")]
		public EntitySet<RouteAssignment> RouteAssignments
		{
			get
			{
				return this._RouteAssignments;
			}
			set
			{
				this._RouteAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicles")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VehicleID;
		
		private string _LicensePlate;
		
		private string _VehicleType;
		
		private string _FuelType;
		
		private System.Nullable<decimal> _FuelConsumptionRate;
		
		private string _Status;
		
		private EntitySet<FuelConsumption> _FuelConsumptions;
		
		private EntitySet<GPSMonitoring> _GPSMonitorings;
		
		private EntitySet<RouteAssignment> _RouteAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleIDChanging(int value);
    partial void OnVehicleIDChanged();
    partial void OnLicensePlateChanging(string value);
    partial void OnLicensePlateChanged();
    partial void OnVehicleTypeChanging(string value);
    partial void OnVehicleTypeChanged();
    partial void OnFuelTypeChanging(string value);
    partial void OnFuelTypeChanged();
    partial void OnFuelConsumptionRateChanging(System.Nullable<decimal> value);
    partial void OnFuelConsumptionRateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Vehicle()
		{
			this._FuelConsumptions = new EntitySet<FuelConsumption>(new Action<FuelConsumption>(this.attach_FuelConsumptions), new Action<FuelConsumption>(this.detach_FuelConsumptions));
			this._GPSMonitorings = new EntitySet<GPSMonitoring>(new Action<GPSMonitoring>(this.attach_GPSMonitorings), new Action<GPSMonitoring>(this.detach_GPSMonitorings));
			this._RouteAssignments = new EntitySet<RouteAssignment>(new Action<RouteAssignment>(this.attach_RouteAssignments), new Action<RouteAssignment>(this.detach_RouteAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this.OnLicensePlateChanging(value);
					this.SendPropertyChanging();
					this._LicensePlate = value;
					this.SendPropertyChanged("LicensePlate");
					this.OnLicensePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleType", DbType="NVarChar(50)")]
		public string VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelType", DbType="NVarChar(20)")]
		public string FuelType
		{
			get
			{
				return this._FuelType;
			}
			set
			{
				if ((this._FuelType != value))
				{
					this.OnFuelTypeChanging(value);
					this.SendPropertyChanging();
					this._FuelType = value;
					this.SendPropertyChanged("FuelType");
					this.OnFuelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelConsumptionRate", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> FuelConsumptionRate
		{
			get
			{
				return this._FuelConsumptionRate;
			}
			set
			{
				if ((this._FuelConsumptionRate != value))
				{
					this.OnFuelConsumptionRateChanging(value);
					this.SendPropertyChanging();
					this._FuelConsumptionRate = value;
					this.SendPropertyChanged("FuelConsumptionRate");
					this.OnFuelConsumptionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_FuelConsumption", Storage="_FuelConsumptions", ThisKey="VehicleID", OtherKey="VehicleID")]
		public EntitySet<FuelConsumption> FuelConsumptions
		{
			get
			{
				return this._FuelConsumptions;
			}
			set
			{
				this._FuelConsumptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_GPSMonitoring", Storage="_GPSMonitorings", ThisKey="VehicleID", OtherKey="VehicleID")]
		public EntitySet<GPSMonitoring> GPSMonitorings
		{
			get
			{
				return this._GPSMonitorings;
			}
			set
			{
				this._GPSMonitorings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_RouteAssignment", Storage="_RouteAssignments", ThisKey="VehicleID", OtherKey="VehicleID")]
		public EntitySet<RouteAssignment> RouteAssignments
		{
			get
			{
				return this._RouteAssignments;
			}
			set
			{
				this._RouteAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelConsumptions(FuelConsumption entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_FuelConsumptions(FuelConsumption entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void attach_GPSMonitorings(GPSMonitoring entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_GPSMonitorings(GPSMonitoring entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void attach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_RouteAssignments(RouteAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
}
#pragma warning restore 1591
